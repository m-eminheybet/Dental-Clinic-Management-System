<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>